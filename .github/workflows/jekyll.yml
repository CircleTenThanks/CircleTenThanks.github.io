# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RUBY_VERSION: '3.4.1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout materialize
        uses: actions/checkout@v4
        with:
          repository: Dogfalo/materialize
          path: materialize
          ref: 1.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install minification tools
        run: npm install -g csso-cli uglify-js

      - name: Minify assets
        run: |
          # CSS Minification
          for file in assets/css/*.css; do
            if [[ ! $file =~ \.min\.css$ ]]; then
              csso "$file" -o "${file%.css}.min.css"
            fi
          done
          
          # JavaScript Minification
          for file in assets/js/*.js; do
            if [[ ! $file =~ \.min\.js$ ]]; then
              uglifyjs "$file" -o "${file%.js}.min.js"
            fi
          done

      - name: Install Ruby
        run: |
          sudo apt update
          sudo apt install -y ruby-build
          sudo mkdir -p /opt/hostedtoolcache/Ruby/${{ env.RUBY_VERSION }}/x64
          sudo ruby-build ${{ env.RUBY_VERSION }} /opt/hostedtoolcache/Ruby/${{ env.RUBY_VERSION }}/x64
          sudo touch /opt/hostedtoolcache/Ruby/${{ env.RUBY_VERSION }}/x64.complete
          echo "/opt/hostedtoolcache/Ruby/${{ env.RUBY_VERSION }}/x64/bin" >> $GITHUB_PATH

      - name: Install bundler
        run: gem install bundler

      - name: Install dependencies
        run: bundle install
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
